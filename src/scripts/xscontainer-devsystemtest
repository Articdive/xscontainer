#!/usr/bin/env python

import sys
# ToDo: hack for building on Fedora
sys.path.append('/usr/local/lib/python2.7/dist-packages/')
import xscontainer.util as util
import xscontainer.coreos as coreos
import xscontainer.docker as docker
import xscontainer.docker_monitor as docker_monitor
import xscontainer.docker_monitor.api as docker_monitor_api
import xscontainer.api_helper as api_helper
import pprint
import time
import traceback


def main():
    session = api_helper.get_local_api_session()
    #url = 'http://stable.release.core-os.net/amd64-usr/current/coreos_production_xen_image.vhd.bz2'
    url = 'http://10.80.3.229/coreos_production_xen_image.vhd.bz2'
    srref = api_helper.get_default_sr(session)
    sruuid = session.xenapi.SR.get_record(srref)['uuid']
    #vmuuid = coreos.install_vm(session, url, sruuid)
    vmuuid = 'd44829c7-d6d6-696d-51bc-8da949da766c'
    client = api_helper.LocalXenAPIClient()
    vm = api_helper.VM(client, uuid = vmuuid)
    docker_monitor_api.deregister_vm(vmuuid, session)
    docker_monitor_api.register_vm(vmuuid, session)
    vmref = api_helper.get_vm_ref_by_uuid(session, vmuuid)
    #try:
    #    session.xenapi.VM.clean_shutdown(vmref)
    #except:
    #    pass
    #coreos.create_config_drive(session, vmuuid, sruuid,
    #                           coreos.get_config_drive_default(session))
    #session.xenapi.VM.start(vmref, False, True)
    connected = False
    while not connected:
        try:
            print "Trying..."
            #start = time.time()
            #for x in range(0, 10):
            container = docker.get_ps_dict(session, vmuuid)
            #end = time.time()
            #print end - start
            pprint.pprint(container)
            connected = True
        except Exception:
            traceback.print_exc()
            print "This didn't work. Trying again."
            time.sleep(3)
    docker.update_docker_ps(vm)

    #docker_monitor.monitor_host()
    """
    docker.passthrough(session, vmuuid,
                       'docker run -d busybox /bin/sh -c "while true; do echo Hello World; sleep 1; done"')
    """
    container = container[0]['entry']['container']
    print docker.get_info_xml(session, vmuuid)
    print docker.get_version_xml(session, vmuuid)
    # print coreos.get_config_drive_configuration(session, '')
    #print docker.monitor_host(returninstantly=True)
    print docker.get_inspect_xml(session, vmuuid, container)
    #docker.start(session, vmuuid, container)
    #docker.restart(session, vmuuid, container)
    pprint.pprint(docker.get_top_dict(session, vmuuid, container))
    print docker.get_top_xml(session, vmuuid, container)
    sys.exit(0)
    #docker.pause(session, vmuuid, container)
    docker.unpause(session, vmuuid, container)
    docker.stop(session, vmuuid, container)
    docker.start(session, vmuuid, container)

if __name__ == "__main__":
    main()
